apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "act_runner.fullname" . }}
  labels:
    {{- include "act_runner.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "act_runner.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "act_runner.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "act_runner.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: act-runner
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c", "while ! nc -z localhost 2376 </dev/null; do echo 'waiting for docker daemon...'; sleep 5; done; /sbin/tini -- /opt/act/run.sh"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DOCKER_HOST
              value: "tcp://localhost:2376"
            - name: DOCKER_CERT_PATH
              value: /certs/client
            - name: DOCKER_TLS_VERIFY
              value: "1"
            - name: GITEA_INSTANCE_URL
              value: {{ .Values.act_runner.instance }}
            - name: GITEA_RUNNER_MAX_PARALLEL_JOBS
              value: "{{ .Values.act_runner.parallel_jobs }}"
            - name: GITEA_RUNNER_LABELS
              value: {{ join "," .Values.act_runner.labels }}
            - name: GITEA_RUNNER_REGISTRATION_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- if not .Values.act_runner.existingToken }}
                  name: {{ include "act_runner.fullname" . }}-secret
                  {{- else }}
                  name: {{ .Values.act_runner.existingToken }}
                  {{- end }}
                  key: act-runner-token
          volumeMounts:
            - name: docker-certs
              mountPath: /certs
            - name: {{ include "act_runner.fullname" . }}-pvc
              mountPath: /data
        - name: act-runner-dind
          securityContext:
            privileged: true
          image: docker:23.0.6-dind
          imagePullPolicy: IfNotPresent
          env:
            - name: DOCKER_TLS_CERTDIR
              value: /certs
          volumeMounts:
          - name: docker-certs
            mountPath: /certs
          - name: docker-graph-storage
            mountPath: /var/lib/docker
      volumes:
        - name: docker-certs
          emptyDir: {}
        - name: docker-graph-storage
          emptyDir: {}
        - name: {{ include "act_runner.fullname" . }}-pvc
          persistentVolumeClaim:
            claimName: {{ include "act_runner.fullname" . }}-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
